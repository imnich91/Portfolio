'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _ValidationError = require('../ValidationError');

var _ValidationError2 = _interopRequireDefault(_ValidationError);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }

function _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError("this hasn't been initialised - super() hasn't been called"); } return call && (typeof call === "object" || typeof call === "function") ? call : self; }

function _inherits(subClass, superClass) { if (typeof superClass !== "function" && superClass !== null) { throw new TypeError("Super expression must either be null or a function, not " + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }

var moment = require('moment');

var Date = function (_React$Component) {
  _inherits(Date, _React$Component);

  function Date(props, context) {
    _classCallCheck(this, Date);

    var _this = _possibleConstructorReturn(this, Object.getPrototypeOf(Date).call(this, props, context));

    _this.state = {
      value: props.value || undefined
    };
    return _this;
  }

  _createClass(Date, [{
    key: 'getValue',
    value: function getValue() {
      return Promise.resolve(this.state.value);
    }
  }, {
    key: 'validate',
    value: function validate(value) {
      var _props = this.props;
      var name = _props.name;
      var required = _props.required;
      var requiredMsg = _props.requiredMsg;
      var minDate = _props.minDate;
      var minDateMsg = _props.minDateMsg;
      var maxDate = _props.maxDate;
      var maxDateMsg = _props.maxDateMsg;

      // Normalize value

      if (value === "" || value === undefined || value === null) {
        value = null;
        if (required) {
          return Promise.reject(new _ValidationError2.default(this, name, requiredMsg || "Value is required"));
        } else {
          return Promise.resolve(null);
        }
      }

      var date = moment(value).toDate();

      return Promise.resolve(date);
    }
  }, {
    key: '_onChange',
    value: function _onChange(e) {
      this.setState({
        value: e.target.value
      });
    }
  }, {
    key: 'render',
    value: function render() {
      var _props2 = this.props;
      var className = _props2.className;

      var other = _objectWithoutProperties(_props2, ['className']);

      return _react2.default.createElement('input', _extends({}, other, { type: 'date', onChange: this._onChange.bind(this) }));
    }
  }]);

  return Date;
}(_react2.default.Component);

exports.default = Date;