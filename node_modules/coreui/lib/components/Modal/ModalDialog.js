'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _Button = require('../Button');

var _Button2 = _interopRequireDefault(_Button);

var _Shared = require('../../Shared');

var _Shared2 = _interopRequireDefault(_Shared);

var _classnames = require('classnames');

var _classnames2 = _interopRequireDefault(_classnames);

var _ramda = require('ramda');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }

var handleClick = function handleClick(onClick, onHide, e) {
  if ((0, _ramda.is)(Function, onClick)) {
    onClick(e);
  }
  if ((0, _ramda.is)(Function, onHide)) {
    onHide(e);
  }
};

var renderButton = function renderButton(_ref, Form, buttonData, i) {
  var onHide = _ref.onHide;
  var displayText = buttonData.displayText;
  var isCancel = buttonData.isCancel;
  var isDefault = buttonData.isDefault;
  var isFormSubmit = buttonData.isFormSubmit;
  var name = buttonData.name;

  var actionType = buttonData.actionType || (isDefault ? 'primary' : 'secondary');
  var onClick = (0, _ramda.partial)(handleClick, [buttonData.onClick, isCancel && onHide]);
  var text = displayText || name;

  return isFormSubmit ? _react2.default.createElement(
    Form.Button,
    _extends({ actionType: actionType }, { key: i, type: 'submit' }),
    text
  ) : _react2.default.createElement(
    _Button2.default,
    _extends({ actionType: actionType, onClick: onClick }, { key: i, type: 'submit' }),
    text
  );
};

var maybeRenderFooter = function maybeRenderFooter(props) {
  var _cx;

  var buttons = props.buttons;
  var dialogFooterClassName = props.dialogFooterClassName;
  var dialogFooterStyle = props.dialogFooterStyle;

  var className = (0, _classnames2.default)('modal-footer', (_cx = {}, _defineProperty(_cx, dialogFooterClassName, !!dialogFooterClassName), _defineProperty(_cx, 'text-xs-right', !dialogFooterClassName), _cx));
  var Form = _Shared2.default.getRegisteredComponents().Form;

  return buttons && buttons.length && _react2.default.createElement(
    'div',
    _extends({ className: className }, { style: dialogFooterStyle }),
    (0, _ramda.intersperse)(' ', buttons.map((0, _ramda.partial)(renderButton, [props, Form])))
  );
};

var ModalDialog = function ModalDialog(props) {
  var children = props.children;
  var headerContent = props.headerContent;
  var sheet = props.sheet;
  var theme = props.theme;

  var Form = _Shared2.default.getRegisteredComponents().Form;
  var Container = Form ? Form.Context : 'div';
  var systemClasses = sheet.classes;
  var themeClasses = theme.classes;
  var themeStyles = theme.styles;


  return _react2.default.createElement(
    Container,
    null,
    _react2.default.createElement(
      'div',
      { className: (0, _classnames2.default)(systemClasses.dialog, themeClasses.dialog), style: themeStyles.dialog },
      _react2.default.createElement(
        'div',
        {
          className: (0, _classnames2.default)(systemClasses.dialogContent, themeClasses.dialogContent),
          style: themeStyles.dialogContent
        },
        _react2.default.createElement(
          'div',
          {
            className: (0, _classnames2.default)(systemClasses.dialogHeader, themeClasses.dialogHeader),
            style: themeStyles.dialogHeader
          },
          _react2.default.createElement('button', { 'aria-label': 'Close', className: 'sr-only', type: 'button' }),
          _react2.default.createElement(
            'h4',
            {
              className: (0, _classnames2.default)(systemClasses.dialogTitle, themeClasses.dialogTitle),
              style: themeStyles.dialogTitle
            },
            headerContent
          )
        ),
        _react2.default.createElement(
          'div',
          {
            className: (0, _classnames2.default)(systemClasses.dialogBody, themeClasses.dialogBody),
            style: themeStyles.dialogBody
          },
          children
        ),
        maybeRenderFooter(props)
      )
    )
  );
};

ModalDialog.propTypes = {
  children: _react.PropTypes.node,
  headerContent: _react.PropTypes.oneOfType([_react.PropTypes.string, _react.PropTypes.element]),
  onHide: _react.PropTypes.func,
  sheet: _react.PropTypes.object,
  theme: _react.PropTypes.object
};

exports.default = ModalDialog;