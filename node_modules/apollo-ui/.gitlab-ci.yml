variables:
  STAGE_URL: "stage.design.imshealth.com"
  PROD_URL: "design.imshealth.com"
  CDN_URL: "nexxus-marketing-staticcontent/design"

stages:
  - build
  - deploy

#
# Build project, including docs and static assets
#

build:
  image: ruby:2.4.1
  stage: build
  before_script:
    # Install Jekyll and Bundler gems
    - gem install jekyll bundler
    # Install Node
    - curl -sL https://deb.nodesource.com/setup_7.x | bash -
    - apt-get install -y nodejs
    # Install Gulp globally and project dependencies locally
    - npm install -g gulp
    - npm install
  script: gulp
  # Make `dist` directory available to other jobs
  artifacts:
    paths:
      - dist/

#
# Deploy docs on push to development branch
#

deploy_stage:
  image: python:3.6
  stage: deploy
  environment:
    name: Staging
    url: http://$STAGE_URL
  only:
    - development
  dependencies:
    # Gives this job access to the artifacts from `build` job
    - build
  before_script:
    # Install AWS Command Line Interface tools
    - pip install awscli
  # Variables stored in Gitlab (e.g. $AWS_ID_DOCS) for security
  script:
    >
      AWS_ACCESS_KEY_ID=$AWS_ID_DOCS
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_DOCS
      aws s3 cp --recursive ./dist/ s3://$STAGE_URL/

#
# Deploy docs on push to master
#

deploy_prod:
  image: python:3.6
  stage: deploy
  environment:
    name: Production
    url: http://$PROD_URL
  only:
    - master
  dependencies:
    - build
  before_script:
    - pip install awscli
  script:
    >
      AWS_ACCESS_KEY_ID=$AWS_ID_DOCS
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_DOCS
      aws s3 cp --recursive ./dist/ s3://$PROD_URL/

#
# Deploy JS and CSS on new tag creation
#

deploy_cdn:
  image: python:3.6
  stage: deploy
  only:
    - tags
  dependencies:
    - build
  before_script:
    - pip install awscli
  script:
    # Get version number from package.json
    - >
      export PACKAGE_VERSION=$(cat package.json | grep version | head -1 | awk -F: '{ print $2 }' | sed 's/[",]//g' | tr -d '[[:space:]]')
    # Publish CSS
    - >
      AWS_ACCESS_KEY_ID=$AWS_ID_CDN
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_CDN
      aws s3 cp ./dist/css s3://$CDN_URL/css/$PACKAGE_VERSION/ --recursive --exclude docs*.css --include apollo*.css
    # Publish JS
    - >
      AWS_ACCESS_KEY_ID=$AWS_ID_CDN
      AWS_SECRET_ACCESS_KEY=$AWS_SECRET_CDN
      aws s3 cp ./dist/js s3://$CDN_URL/js/$PACKAGE_VERSION/ --recursive --exclude docs*.js --include apollo*.js
